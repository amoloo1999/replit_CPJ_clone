openapi: 3.0.1
info:
  title: Storedge Units Proxy
  version: 1.0.0
  description: |
    Minimal proxy for Storedge Facilities & Units endpoints to be used via GPT Actions.
    All endpoints require a static bearer token (set PROXY_BEARER env) passed as Authorization: Bearer <token>.
servers:
  - url: https://YOUR_REPL_URL   # replace with actual Replit URL
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
paths:
  /facilities/short:
    get:
      operationId: listFacilitiesShort
      summary: List facilities (short form) for the company
      responses:
        '200':
          description: OK
  /facilities/{facility_id}/units:
    get:
      operationId: listUnits
      summary: List units for a facility with pagination support
      parameters:
        - name: facility_id
          in: path
          required: true
          schema: { type: string }
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number for pagination
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            default: 100
            minimum: 1
            maximum: 1000
          description: Number of units per page
      responses:
        '200': { description: Paginated units response }
  /facilities/{facility_id}/units/count:
    get:
      operationId: getUnitsCount
      summary: Get unit count and pagination info for planning
      parameters:
        - name: facility_id
          in: path
          required: true
          schema: { type: string }
      responses:
        '200': { description: Unit count and pagination metadata }
  /facilities/{facility_id}/units/bulk_update:
    put:
      operationId: bulkUpdateUnits
      summary: Bulk update units (partial updates only include changed fields)
      parameters:
        - name: facility_id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [units]
              properties:
                units:
                  type: array
                  items:
                    type: object
      responses:
        '200': { description: Update result }
  /facilities/{facility_id}/units/bulk_create:
    post:
      operationId: bulkCreateUnits
      summary: Bulk create units
      parameters:
        - name: facility_id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [units]
              properties:
                units:
                  type: array
                  items: { type: object }
      responses:
        '200': { description: Creation result }
  /facilities/{facility_id}/units/make_rentable:
    post:
      operationId: makeUnitsRentable
      summary: Mark units rentable / update rentable status
      parameters:
        - name: facility_id
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [units]
              properties:
                units:
                  type: array
                  items: { type: object }
      responses:
        '200': { description: Result }
