{
  "openapi": "3.1.1",
  "info": {
    "title": "Storedge Pricing Automation API",
    "version": "1.4.0"
  },
  "servers": [{ "url": "https://rate-changer-direct.replit.app" }],
  "components": {
    "schemas": {
      "Change": {
        "type": "object",
        "properties": {
          "group_key": { "type": "string", "description": "Base64 Group Key or plain UG_KEY as in cached report" },
          "new_rate": { "type": "number", "description": "Absolute new Standard Rate" },
          "pct_delta": { "type": "number", "description": "Relative change, e.g. -0.05 for -5%" }
        },
        "required": ["group_key"],
        "additionalProperties": false
      },
      "PreviewRow": {
        "type": "object",
        "properties": {
          "Group Key": { "type": "string" },
          "group_key_plain": { "type": "string" },
          "Current Standard Rate": { "type": ["string", "number", "null"] },
          "New Standard Rate": { "type": ["number", "null"] },
          "Occupancy": { "type": ["string", "number", "null"] },
          "Available": { "type": ["string", "number", "null"] },
          "pct_change": { "type": ["number", "null"] },
          "decision": { "type": "string", "enum": ["OK", "WARN", "BLOCK"] },
          "reasons": { "type": "string" }
        },
        "required": ["Group Key", "group_key_plain", "decision"],
        "additionalProperties": true
      },
      "PreviewSummary": {
        "type": "object",
        "properties": {
          "total": { "type": "integer" },
          "ok": { "type": "integer" },
          "warn": { "type": "integer" },
          "block": { "type": "integer" }
        },
        "required": ["total", "ok", "warn", "block"],
        "additionalProperties": false
      },
      "PreviewResponse": {
        "type": "object",
        "properties": {
          "proposal_id": { "type": "string", "description": "Identifier returned by preview; must be used in /confirm" },
          "requires_confirmation": { "type": "boolean" },
          "rows": { "type": "array", "items": { "$ref": "#/components/schemas/PreviewRow" } },
          "summary": { "$ref": "#/components/schemas/PreviewSummary" }
        },
        "required": ["proposal_id", "requires_confirmation", "rows", "summary"],
        "additionalProperties": false
      },
      "ConfirmRequest": {
        "type": "object",
        "properties": {
          "proposal_id": { "type": "string" },
          "allow_block": { "type": "boolean", "default": false },
          "test_mode": { "type": "boolean", "default": false }
        },
        "required": ["proposal_id"],
        "additionalProperties": false
      },
      "ErrorWithHint": {
        "type": "object",
        "properties": {
          "error": { "type": "string" },
          "hint": { "type": "string" },
          "ask_next": { "type": "string" }
        },
        "required": ["error"],
        "additionalProperties": true
      }
    }
  },
  "paths": {
    "/set-user": {
      "post": {
        "summary": "Identify the user (required before upload/confirm)",
        "operationId": "setUser",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "type": "object", "properties": { "user": { "type": "string" } }, "required": ["user"], "additionalProperties": false }
            }
          }
        },
        "responses": {
          "200": { "description": "User set" },
          "400": { "description": "Missing user" }
        }
      }
    },
    "/get_site_keys": {
      "get": {
        "summary": "Get the sE_ID for a site by 4-digit site_number",
        "operationId": "getSiteKeys",
        "parameters": [
          { "name": "site_number", "in": "query", "required": true, "schema": { "type": "string", "pattern": "^[0-9]{4}$" } }
        ],
        "responses": {
          "200": { "description": "Site key found" },
          "400": { "description": "Invalid parameter" },
          "404": { "description": "Site not found" }
        }
      }
    },
    "/create-report": {
      "post": {
        "summary": "Create an unoccupied revenue management report for given facilities",
        "operationId": "createReport",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filter_facilities": { "type": "array", "items": { "type": "string", "format": "uuid" }, "minItems": 1 }
                },
                "required": ["filter_facilities"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Report requested" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/wait-until-ready/{report_id}": {
      "get": {
        "summary": "Poll until a report is ready",
        "operationId": "waitUntilReady",
        "parameters": [
          { "name": "report_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "Ready" }, "504": { "description": "Timeout" } }
      }
    },
    "/report-status/{report_id}": {
      "get": {
        "summary": "Check report status",
        "operationId": "reportStatus",
        "parameters": [
          { "name": "report_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "Status" } }
      }
    },
    "/report-data/{report_id}": {
      "get": {
        "summary": "Fetch completed report JSON",
        "operationId": "reportData",
        "parameters": [
          { "name": "report_id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "Report data returned" }, "202": { "description": "Not ready yet" } }
      }
    },
    "/filter-report": {
      "post": {
        "summary": "Filter the cached report",
        "operationId": "filterReport",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "size": { "type": "string", "nullable": true },
                  "amenities": { "type": "string", "nullable": true },
                  "unit_type": { "type": "string", "nullable": true },
                  "min_sf": { "type": "number", "nullable": true },
                  "max_sf": { "type": "number", "nullable": true },
                  "max_rows": { "type": "integer", "maximum": 100 }
                },
                "additionalProperties": true
              }
            }
          }
        },
        "responses": { "200": { "description": "Filtered data" }, "404": { "description": "No cached report" } }
      }
    },
    "/preview/auto": {
      "post": {
        "summary": "Preview direct changes only",
        "operationId": "previewAuto",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "changes": { "type": "array", "items": { "$ref": "#/components/schemas/Change" }, "minItems": 1 }
                },
                "required": ["changes"],
                "additionalProperties": false
              },
              "examples": {
                "direct": {
                  "value": {
                    "changes": [
                      { "group_key": "MTB4MTB4MCAtICQ5NS4wMCAtIDIzOTE5MiAtIFsxNjk1OTZd", "new_rate": 88 },
                      { "group_key": "UG_KEY_PLAIN_123", "pct_delta": -0.05 }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Preview result with proposal_id",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PreviewResponse" } } }
          },
          "400": {
            "description": "Bad request (missing/invalid params)",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorWithHint" } } }
          },
          "404": {
            "description": "No cached report or no keys matched",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorWithHint" } } }
          }
        }
      }
    },
    "/confirm": {
      "post": {
        "summary": "Confirm the preview and upload (or dry run)",
        "operationId": "confirmPreview",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/ConfirmRequest" } }
          }
        },
        "responses": {
          "200": { "description": "Upload complete or dry run validated" },
          "400": {
            "description": "Invalid or missing proposal_id",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorWithHint" } } }
          },
          "404": {
            "description": "Unknown proposal_id",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorWithHint" } } }
          },
          "428": {
            "description": "Missing identity",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorWithHint" } } }
          }
        }
      }
    },
    "/gpt-upload-report": {
      "post": {
        "summary": "Upload updated pricing report (manual/direct only)",
        "operationId": "gptUploadReport",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "change_source": { "type": "string", "enum": ["manual", "direct"] },
                      "csv_data": { "type": "string", "format": "byte" },
                      "test_mode": { "type": "boolean" }
                    },
                    "required": ["change_source", "csv_data"],
                    "additionalProperties": false
                  }
                ]
              },
              "examples": {
                "manualBase64": {
                  "value": {
                    "change_source": "manual",
                    "csv_data": "Q3Jvd24sR3JvdXAgS2V5LE5ldyBTdGFuZGFyZCBSYXRlCjEsIk1UQnhNVEYwIEJBU0U2NCIsMTI5Cg==",
                    "test_mode": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Upload successful or validated (test_mode)" },
          "400": { "description": "Invalid input" },
          "428": { "description": "Missing identity" }
        }
      }
    }
  }
}

